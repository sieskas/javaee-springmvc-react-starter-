<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/mvc
          http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/data/jpa https://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <context:annotation-config/>
    <mvc:annotation-driven />
    <jpa:repositories base-package="com.ia.demo.outcall.repository" />
    <context:component-scan base-package="com.ia.demo" />
    <mvc:default-servlet-handler/>

    <!-- Pour servir les fichiers React buildÃ©s -->
    <mvc:resources mapping="/assets/**" location="/assets/" />


    <bean id="propertyConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
                <!--                <value>classpath:application-${spring.profiles.active:local}.properties</value>-->
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

    <bean id="databaseInitializer" class="com.ia.demo.config.DatabaseInitializer"/>

    <!-- BasicDataSource pour le pool de connexions -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${spring.datasource.driver-class-name}"/>
        <property name="url" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}"/>
        <property name="password" value="${spring.datasource.password}"/>
        <property name="initialSize" value="${spring.datasource.initialSize}"/>
        <property name="maxTotal" value="${spring.datasource.maxTotal}"/>
        <property name="maxIdle" value="${spring.datasource.maxIdle}"/>
        <property name="minIdle" value="${spring.datasource.minIdle}"/>
        <property name="maxWaitMillis" value="${spring.datasource.maxWaitMillis}"/>
    </bean>

    <!-- Configuration EntityManagerFactory -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="com.ia.demo.domain" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2012Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <!-- Gestionnaire de transactions -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- Activer les annotations de transaction -->
    <tx:annotation-driven transaction-manager="transactionManager" />


    <bean id="flywayConfig" class="org.flywaydb.core.api.configuration.ClassicConfiguration">
        <property name="dataSource" ref="dataSource"/>
        <property name="locations" value="classpath:db/migration"/>
    </bean>

    <!-- Flyway Bean -->
    <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">
        <constructor-arg ref="flywayConfig"/>
    </bean>
</beans>
